{
	"info": {
		"_postman_id": "3efd1650-3e4f-4799-b8af-22b67716e449",
		"name": "Authentication & Authorization",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive",
			"item": [
				{
					"name": "Create a FFM OT member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Moosejaw@gmail.com\",\r\n    \"password\": \"eddb2\",\r\n    \"firstname\": \"Moose\",\r\n    \"lastname\": \"Jaw\",\r\n    \"username\": \"jaw2\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/v1/field-force/auth/register-admin-user",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-admin-user"
							]
						},
						"description": "Objective: As a Tester, I should be able to create an OT member with all the given fields.\n\nSE: Shahed\nPO: Pranto\nTester: Suhan\n\nTest Data:{\n    \"email\": \"Moosejaw@gmail.com\",\n    \"password\": \"eddb2\",\n    \"firstname\": \"Moose\",\n    \"lastname\": \"Jaw\",\n    \"username\": \"jaw2\"\n}\n\nExpected Result: As a tester, I should be able to create an OT member with Email, Password, Firstname, Lastname, and username\n\nActual result: As a tester, I was able to create an Ot member with Email, Password, Firstname, Lastname and username\n\nTest Result:{\n    \"message\": \"Successfully registered admin user jaw2.\",\n    \"status\": \"success\"\n}\nTest status: Passed Status code: 201 created"
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative",
			"item": [
				{
					"name": "Create a FFM OT member without email and password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"firstname\": \"Moose\",\r\n    \"lastname\": \"Jaw\",\r\n    \"username\": \"jaw2\"\r\n}"
						},
						"url": {
							"raw": "http://137.184.134.215:5001/api/v1/field-force/auth/register-admin-user",
							"protocol": "http",
							"host": [
								"137",
								"184",
								"134",
								"215"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-admin-user"
							]
						},
						"description": "Objective: As a Tester, I should be able to create an OT member with all the given fields.\n\nSE: Shahed\nPO: Pranto\nTester: Suhan\n\nTest Data:{\n    \"email\": \"Moosejaw@gmail.com\",\n    \"password\": \"eddb2\",\n    \"firstname\": \"Moose\",\n    \"lastname\": \"Jaw\",\n    \"username\": \"jaw2\"\n}\n\nExpected Result: As a tester, I should be able to create an OT member with Email, Password, Firstname, Lastname, and username\n\nActual result: As a tester, I was able to create an Ot member with Email, Password, Firstname, Lastname and username\n\nTest Result:{\n    \"message\": \"Successfully registered admin user jaw2.\",\n    \"status\": \"success\"\n}\nTest status: Passed Status code: 201 created"
					},
					"response": []
				},
				{
					"name": "Create a FFM OT member without password and username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Moosejaw@gmail.com\",\r\n    \"password\": \"eddb2\",\r\n    \"firstname\": \"Moose\",\r\n    \"lastname\": \"Jaw\",\r\n    \"username\": \"jaw2\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/v1/field-force/auth/register-admin-user",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-admin-user"
							]
						},
						"description": "Objective: As a Tester, I should be able to create an OT member with all the given fields.\n\nSE: Shahed\nPO: Pranto\nTester: Suhan\n\nTest Data:{\n    \"email\": \"Moosejaw@gmail.com\",\n    \"password\": \"eddb2\",\n    \"firstname\": \"Moose\",\n    \"lastname\": \"Jaw\",\n    \"username\": \"jaw2\"\n}\n\nExpected Result: As a tester, I should be able to create an OT member with Email, Password, Firstname, Lastname, and username\n\nActual result: As a tester, I was able to create an Ot member with Email, Password, Firstname, Lastname and username\n\nTest Result:{\n    \"message\": \"Successfully registered admin user jaw2.\",\n    \"status\": \"success\"\n}\nTest status: Passed Status code: 201 created"
					},
					"response": []
				}
			]
		},
		{
			"name": "Create a new company",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Register a new company",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"United Healthcare\",\r\n  \"address\": \"MI,USA\",\r\n  \"tin\": \"586478\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://137.184.134.215:5001//api/v1/field-force/auth/register-company",
									"protocol": "http",
									"host": [
										"137",
										"184",
										"134",
										"215"
									],
									"port": "5001",
									"path": [
										"",
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "{\n    \"data\": {\n        \"company_address\": \"MI,USA\",\n        \"company_id\": 30,\n        \"company_name\": \"United Healthcare\",\n        \"tin\": \"586478\"\n    },\n    \"message\": \"Successfully registered company 'United Healthcare' .\",\n    \"status\": \"success\"\n}"
							},
							"response": []
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Register a new company withput TIN",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"United Healthcare\",\r\n  \"address\": \"MI,USA\",\r\n  \"tin\": \"586478\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://137.184.134.215:5001//api/v1/field-force/auth/register-company",
									"protocol": "http",
									"host": [
										"137",
										"184",
										"134",
										"215"
									],
									"port": "5001",
									"path": [
										"",
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "{\n    \"data\": {\n        \"company_address\": \"MI,USA\",\n        \"company_id\": 30,\n        \"company_name\": \"United Healthcare\",\n        \"tin\": \"586478\"\n    },\n    \"message\": \"Successfully registered company 'United Healthcare' .\",\n    \"status\": \"success\"\n}"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Create a new company manager",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Register a company manager",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"user@example.com\",\r\n  \"password\": \"string\",\r\n  \"company_id\": 0,\r\n  \"firstname\": \"string\",\r\n  \"lastname\": \"string\",\r\n  \"username\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://137.184.134.215:5001/api/v1/field-force/auth/register-dashboard-user",
									"protocol": "http",
									"host": [
										"137",
										"184",
										"134",
										"215"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Register a company manager without ID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"user@example.com\",\r\n  \"password\": \"string\",\r\n  \"company_id\": 0,\r\n  \"firstname\": \"string\",\r\n  \"lastname\": \"string\",\r\n  \"username\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://137.184.134.215:5001/api/v1/field-force/auth/register-dashboard-user",
									"protocol": "http",
									"host": [
										"137",
										"184",
										"134",
										"215"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}